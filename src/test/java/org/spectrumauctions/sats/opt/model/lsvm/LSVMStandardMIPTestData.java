package org.spectrumauctions.sats.opt.model.lsvm;

import java.util.HashMap;
import java.util.Map;

/**
 * This class contains test data that can be used to evaluate if an algorithm is
 * able to find the efficient allocation in the LSVM default setup. The results
 * were obtained solving the complete XOR-WDP
 *
 * @author Nicolas KÃ¼chler
 */
public class LSVMStandardMIPTestData {

	public static Map<Long, Double> getTestData() {
		Map<Long, Double> seedMap = new HashMap<>();
		seedMap.put(1498245658234L, 557.178609512);
		seedMap.put(1498245658234L, 557.178609512);
		seedMap.put(1498245748342L, 477.200634975);
		seedMap.put(1498245748164L, 544.654299513);
		seedMap.put(1498245777411L, 551.962738899);
		seedMap.put(1498245838077L, 573.86026773);
		seedMap.put(1498245865218L, 599.10362404);
		seedMap.put(1498245898158L, 557.629474641);
		seedMap.put(1498246014500L, 532.449703927);
		seedMap.put(1498246014029L, 533.238658654);
		seedMap.put(1498246073000L, 521.465301781);
		seedMap.put(1498246072530L, 564.574533053);
		seedMap.put(1498246073098L, 514.684313009);
		seedMap.put(1498246131808L, 542.961384741);
		seedMap.put(1498246132122L, 560.585163005);
		seedMap.put(1498246138445L, 596.430700336);
		seedMap.put(1498246190995L, 531.056130435);
		seedMap.put(1498246190944L, 505.814660727);
		seedMap.put(1498246190434L, 593.961061995);
		seedMap.put(1498246257852L, 565.332658375);
		seedMap.put(1498246279533L, 493.867748403);
		seedMap.put(1498246318519L, 549.353251744);
		seedMap.put(1498246377984L, 517.999485315);
		seedMap.put(1498246378960L, 488.019789418);
		seedMap.put(1498246398513L, 532.524004466);
		seedMap.put(1498246438037L, 524.357069144);
		seedMap.put(1498246457017L, 516.126825955);
		seedMap.put(1498246456250L, 483.952135892);
		seedMap.put(1498246498164L, 513.767957274);
		seedMap.put(1498246498856L, 498.723680914);
		seedMap.put(1498246516027L, 540.230777901);
		seedMap.put(1498246558364L, 592.64289779);
		seedMap.put(1498246558929L, 556.141352564);
		seedMap.put(1498246558193L, 534.360757983);
		seedMap.put(1498246558188L, 551.628803352);
		seedMap.put(1498246558952L, 563.26626774);
		seedMap.put(1498246574255L, 543.679139082);
		seedMap.put(1498246617985L, 540.88924612);
		seedMap.put(1498246677352L, 512.11569568);
		seedMap.put(1498246677359L, 517.407812551);
		seedMap.put(1498246737416L, 563.275258538);
		seedMap.put(1498246737482L, 476.737441455);
		seedMap.put(1498246737414L, 537.110093959);
		seedMap.put(1498246751292L, 495.690253603);
		seedMap.put(1498246810834L, 556.464414792);
		seedMap.put(1498246810267L, 475.350546792);
		seedMap.put(1498246857608L, 532.50959988);
		seedMap.put(1498246857549L, 522.670709851);
		seedMap.put(1498246857566L, 572.421893398);
		seedMap.put(1498246858330L, 621.692985037);
		seedMap.put(1498246857591L, 465.547309495);
		seedMap.put(1498246857567L, 551.514673262);
		seedMap.put(1498246917614L, 553.309203434);
		seedMap.put(1498246917612L, 564.075722411);
		seedMap.put(1498246977748L, 514.880745193);
		seedMap.put(1498246987313L, 595.411587475);
		seedMap.put(1498246987281L, 559.094551307);
		seedMap.put(1498247037780L, 588.340846024);
		seedMap.put(1498247037788L, 593.523379209);
		seedMap.put(1498247037800L, 555.738336455);
		seedMap.put(1498247097853L, 550.117982901);
		seedMap.put(1498247097853L, 550.117982901);
		seedMap.put(1498247098585L, 514.383604278);
		seedMap.put(1498247098576L, 588.479418123);
		seedMap.put(1498247157985L, 543.43156622);
		seedMap.put(1498247158704L, 528.419115731);
		seedMap.put(1498247157921L, 577.336121067);
		seedMap.put(1498247157939L, 512.465338628);
		seedMap.put(1498247164254L, 623.666011223);
		seedMap.put(1498247218782L, 524.941320973);
		seedMap.put(1498247218019L, 572.608469687);
		seedMap.put(1498247218013L, 558.471882738);
		seedMap.put(1498247278051L, 571.866119152);
		seedMap.put(1498247278067L, 546.807118003);
		seedMap.put(1498247278097L, 575.68283613);
		seedMap.put(1498247278070L, 489.895000619);
		seedMap.put(1498247338174L, 510.79608823);
		seedMap.put(1498247338193L, 560.376228022);
		seedMap.put(1498247338150L, 577.905445494);
		seedMap.put(1498247338147L, 506.579764315);
		seedMap.put(1498247398974L, 475.866597137);
		seedMap.put(1498247398201L, 513.549605707);
		seedMap.put(1498247398208L, 580.730166316);
		seedMap.put(1498247398223L, 592.246506883);
		seedMap.put(1498247398228L, 508.205298477);
		seedMap.put(1498247457329L, 539.788680398);
		seedMap.put(1498247458084L, 557.340409201);
		seedMap.put(1498247457363L, 454.017008828);
		seedMap.put(1498247457373L, 541.715318699);
		seedMap.put(1498247459248L, 559.886569438);
		seedMap.put(1498247517453L, 534.527756386);
		seedMap.put(1498247517458L, 596.79843795);
		seedMap.put(1498247577254L, 571.255854632);
		seedMap.put(1498247636826L, 578.175509769);
		seedMap.put(1498247636256L, 488.431948687);
		seedMap.put(1498247637081L, 540.985977617);
		seedMap.put(1498247636302L, 518.506794738);
		seedMap.put(1498247636218L, 534.942624547);
		seedMap.put(1498247695289L, 436.490322211);
		seedMap.put(1498247695252L, 506.135940435);
		seedMap.put(1498247695228L, 497.449313871);
		seedMap.put(1498247695255L, 583.675072256);
		seedMap.put(1498247695224L, 575.957793355);
		seedMap.put(1498247696031L, 529.551296869);
		seedMap.put(1498247754256L, 516.543018623);
		seedMap.put(1498247754955L, 531.004458135);
		seedMap.put(1498247814040L, 588.095551311);
		seedMap.put(1498247817657L, 568.27546048);
		seedMap.put(1498247872251L, 543.258227007);
		seedMap.put(1498247872320L, 481.447586272);
		seedMap.put(1498247872995L, 500.810753208);
		seedMap.put(1498247931993L, 473.679245552);
		seedMap.put(1498247931270L, 511.458457738);
		seedMap.put(1498247931253L, 586.195862565);
		seedMap.put(1498247931242L, 479.621964032);
		seedMap.put(1498247931237L, 518.503904981);
		seedMap.put(1498247991100L, 472.613359857);
		seedMap.put(1498248049304L, 507.179725877);
		seedMap.put(1498248049295L, 586.056870555);
		seedMap.put(1498248108263L, 593.712777342);
		seedMap.put(1498248108262L, 529.833918528);
		seedMap.put(1498248108429L, 591.475614278);
		seedMap.put(1498248108304L, 511.137305425);
		seedMap.put(1498248108364L, 515.526574419);
		seedMap.put(1498248118559L, 583.162111956);
		seedMap.put(1498248167947L, 541.228981391);
		seedMap.put(1498248167269L, 537.33084317);
		seedMap.put(1498248286117L, 546.316241888);
		seedMap.put(1498248286074L, 509.411601607);
		seedMap.put(1498248285244L, 452.704062405);
		seedMap.put(1498248285882L, 562.989395784);
		seedMap.put(1498248286032L, 520.16203597);
		seedMap.put(1498248298633L, 521.255689176);
		seedMap.put(1498248298675L, 584.365440367);
		seedMap.put(1498248298614L, 575.261754516);
		seedMap.put(1498248344233L, 514.239302615);
		seedMap.put(1498248357983L, 484.921259812);
		seedMap.put(1498248357946L, 526.91240601);
		seedMap.put(1498248403259L, 509.885313448);
		seedMap.put(1498248403284L, 514.939510845);
		seedMap.put(1498248403993L, 568.177296771);
		seedMap.put(1498248462212L, 535.337763332);
		seedMap.put(1498248463099L, 546.550163168);
		seedMap.put(1498248478771L, 452.067311094);
		seedMap.put(1498248521880L, 530.625304918);
		seedMap.put(1498248521987L, 505.415220797);
		seedMap.put(1498248521921L, 539.232860827);
		seedMap.put(1498248538122L, 533.182869985);
		seedMap.put(1498248580990L, 553.832372481);
		seedMap.put(1498248598235L, 550.86243111);
		seedMap.put(1498248598238L, 489.866401379);
		seedMap.put(1498248639246L, 493.012231798);
		seedMap.put(1498248639265L, 471.334029414);
		seedMap.put(1498248639406L, 485.546959473);
		seedMap.put(1498248639241L, 478.526914564);
		seedMap.put(1498248639257L, 563.791897891);
		seedMap.put(1498248639264L, 538.37908516);
		seedMap.put(1498248639263L, 619.870540694);
		seedMap.put(1498248658121L, 521.677949981);
		seedMap.put(1498248658021L, 485.32818168);
		seedMap.put(1498248698266L, 594.045041735);
		seedMap.put(1498248717443L, 578.86740671);
		seedMap.put(1498248757969L, 624.281496811);
		seedMap.put(1498248777510L, 530.937768943);
		seedMap.put(1498248777499L, 610.178110267);
		seedMap.put(1498248816593L, 502.277345836);
		seedMap.put(1498248817024L, 496.206459385);
		seedMap.put(1498248816976L, 533.900017049);
		seedMap.put(1498248838290L, 498.793721674);
		seedMap.put(1498248897625L, 618.372201373);
		seedMap.put(1498248897622L, 542.16096883);
		seedMap.put(1498248957699L, 500.276901377);
		seedMap.put(1498248957687L, 531.445238222);
		seedMap.put(1498248957728L, 494.613146058);
		seedMap.put(1498248957726L, 582.476008085);
		seedMap.put(1498248957710L, 429.847511714);
		seedMap.put(1498248958383L, 567.6667684);
		seedMap.put(1498249017932L, 545.998041679);
		seedMap.put(1498249017734L, 498.539327581);
		seedMap.put(1498249017747L, 546.872646634);
		seedMap.put(1498249017730L, 625.536173455);
		seedMap.put(1498249017701L, 531.584381077);
		seedMap.put(1498249077788L, 508.00935535);
		seedMap.put(1498249077781L, 561.733928362);
		seedMap.put(1498249077814L, 594.275775307);
		seedMap.put(1498249077826L, 565.545343842);
		seedMap.put(1498249137851L, 509.543875008);
		seedMap.put(1498249137854L, 539.205194076);
		seedMap.put(1498249138586L, 495.519153631);
		seedMap.put(1498249137948L, 558.48393607);
		seedMap.put(1498249197988L, 536.839661735);
		seedMap.put(1498249197974L, 558.710500498);
		seedMap.put(1498249198789L, 599.678531919);
		seedMap.put(1498249258058L, 545.843502256);
		seedMap.put(1498249258848L, 512.128233026);
		seedMap.put(1498249258090L, 572.336620326);
		seedMap.put(1498249317236L, 592.152929282);
		seedMap.put(1498249317637L, 570.318162673);
		seedMap.put(1498249317254L, 506.11638496);
		seedMap.put(1498249317277L, 610.558554309);
		return seedMap;
	}

}
